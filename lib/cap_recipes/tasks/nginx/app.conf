server {
  listen              <%= nginx_listen %>;
  <% if nginx_cert_name -%>
  listen              <%= nginx_ssl_listen %>;
  ssl_certificate     <%= "#{nginx_cert_location}/#{nginx_cert_name}.crt" %>;
  ssl_certificate_key <%= "#{nginx_cert_location}/#{nginx_cert_name}.key" %>;
  <% end -%>
  server_name         <%= nginx_server_names %>;

  access_log          syslog:info|<%= nginx_log_dir %>/access_<%= nginx_app_conf_filename %>.log timing;
  error_log           syslog:notice|<%= nginx_log_dir %>/error_<%= nginx_app_conf_filename %>.log;

  location / {
    proxy_pass        http://<%= nginx_app_conf_filename %>;
  }
}

<% if nginx_redirect_www_to_base_domain -%>
server {
  listen <%= nginx_listen %>;
  server_name ~^www\..*$;
  if ($host ~* www\.(.*)) {
    set $host_without_www $1;
    rewrite ^(.*)$ $scheme://$host_without_www$1 permanent;
  }
}
<% end -%>

<% if nginx_redirects -%>
  <% nginx_redirects.split(" ").each do |redir| -%>
server {
  listen <%= nginx_listen %>;
  server_name <%= redir %>;
  rewrite ^ http://<%= nginx_server_names.split(" ").first %>$request_uri? permanent;
}
  <% end -%>
<% end -%>

upstream <%= nginx_app_conf_filename %> {
<% find_servers(:roles => :app).each do |app| -%>
  server <%= app.host %> max_fails=<%= nginx_max_fails %> fail_timeout=<%= nginx_fail_timeout %>;
<% end -%>
}
